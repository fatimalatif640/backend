version: 0.2
run-as: root
 
phases:
  install:
    runtime-versions:
      nodejs: 18  
    commands:
      - echo "Installing dependencies..."
      - npm -v
      - node -v
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo "Repository URI - $REPOSITORY_URI"
  pre_build:
    commands:
      - npm install
  build:
    commands:
      - echo "Fetching environment variables from SSM Parameter Store..."
      - echo "Code Commit ID" ==== $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Build started on `date`"
      - |
        if [ -z "$ROLLBACK_COMMIT_ID" ]; then
        echo "Building the docker image"
        docker build --tag $IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION -f Dockerfile .
        else
        echo "Docker build not required"
        fi
      - |
        if [ -z "$ROLLBACK_COMMIT_ID" ]; then
        echo "Tagging the docker image"
        docker tag $IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
        else
        echo "Image tag not required"
        fi
  post_build:
    commands:
      - echo "Build completed on `date`"
      - |
        if [ -z "$ROLLBACK_COMMIT_ID" ]; then
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION"
          docker push $IMAGE_URI
        else
          echo "Image push not required"
          # Optionally set IMAGE_URI to the existing image URI or leave it as-is for rollback purposes
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$ROLLBACK_COMMIT_ID"
        fi
      - echo "Writing image definitions file..."
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$IMAGE_URI" > imagedefinitions.json
      - cat imagedefinitions.json
 
artifacts:
  files: imagedefinitions.json
